{"version":3,"sources":["webpack:///webpack/bootstrap 8a510a5ddf7cb6d8978e","webpack:///./js/index.js","webpack:///./js/ui/grid.js","webpack:///./js/core/toolkit.js","webpack:///./js/core/generator.js","webpack:///./js/core/sudoku.js","webpack:///./js/ui/popupnumbers.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC,E;;;;;;ACtBD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA0B,MAAM;AAChC,sCAAqC,UAAU;AAC/C,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,wBAAuB,UAAU;AACjC,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,mBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB;AACA,mBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,G;;;;;;AC5FA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kC;;;;;;ACrEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,E;;;;;;ACvBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,YAAW,UAAU;AACrB;AACA;AACA,gBAAe,KAAK;AACpB,eAAc,IAAI;AAClB,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,E","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8a510a5ddf7cb6d8978e","const Grid = require(\"./ui/grid\");\r\nconst Popupnumbers = require(\"./ui/popupnumbers\");\r\n\r\nconst grid = new Grid($(\"#container\"));\r\n\r\ngrid.build();\r\ngrid.layout();\r\n\r\nconst popupnumbers = new Popupnumbers($(\"#popupNumbers\"));\r\ngrid.bindPopup(popupnumbers);\r\n\r\n$(\"#check\").on(\"click\", e => {\r\n  grid.check();\r\n});\r\n$(\"#reset\").on(\"click\", e => {\r\n  grid.reset();\r\n});\r\n$(\"#clear\").on(\"click\", e => {\r\n  grid.clear();\r\n});\r\n$(\"#rebuild\").on(\"click\", e => {\r\n  grid.rebuild();\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 0\n// module chunks = 0","// 生成九宫格\r\n\r\nconst Toolkit = require(\"../core/toolkit\");\r\nconst Generator = require(\"../core/generator\");\r\nconst Sudoku = require(\"../core/sudoku\");\r\n\r\nclass Grid {\r\n  constructor(container) {\r\n    this._$container = container;\r\n  }\r\n\r\n  build() {\r\n    // const generator = new Generator();\r\n    // generator.generate();\r\n    // const matrix = generator.matrix;\r\n\r\n    const sudoku = new Sudoku();\r\n    sudoku.make(4);\r\n    const matrix = sudoku.puzzleMatrix;\r\n\r\n    const rowGroupClasses = [\"row_g_top\", \"row_g_middle\", \"row_g_bottom\"];\r\n    const colGroupClasses = [\"col_g_left\", \"col_g_center\", \"col_g_right\"];\r\n\r\n    const $cells = matrix.map(rowValues => rowValues\r\n      .map((cellValue, colIndex) => {\r\n        return $(\"<span>\")\r\n            .addClass(colGroupClasses[colIndex % 3])\r\n            .addClass(cellValue ? \"fixed\" : \"empty\")\r\n            .text(cellValue)\r\n    }));\r\n\r\n    const $divArray = $cells.map(($spanArray, rowIndex) => {\r\n      return $(\"<div>\")\r\n          .addClass(\"row\")\r\n          .addClass(rowGroupClasses[(rowIndex-1) % 3])\r\n          .append($spanArray);\r\n    });\r\n\r\n    this._$container.append($divArray);\r\n  }\r\n\r\n  layout() {\r\n    const width = $(\"span:first\", this._$container).width();\r\n    $(\"span\", this._$container)\r\n      .height(width)\r\n      .css({\r\n        \"line-height\": `${width}px`,\r\n        \"font-size\": width < 32 ? `${width / 2}px` : \"\"\r\n      })\r\n  }\r\n\r\n  bindPopup(popupNumbers) {\r\n    this._$container.on(\"click\", \"span\", e => {\r\n      const $cell = $(e.target);\r\n      popupNumbers.popup($cell);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 检查用户解谜的结果，成功进行提示，失败提示错误位置的标记\r\n   */\r\n  check() {\r\n  }\r\n\r\n  /**\r\n   * 重置当前谜盘到初始状态\r\n   */\r\n  reset() {\r\n  }\r\n\r\n\r\n  /**\r\n   * 清理错误标记\r\n   */\r\n  clear() {\r\n  }\r\n\r\n  /**\r\n   * 重建新的谜盘，开始新一局\r\n   */\r\n  rebuild() {\r\n    this._$container.empty();\r\n    this.build();\r\n    this.layout();\r\n  }\r\n}\r\n\r\nmodule.exports = Grid;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/grid.js\n// module id = 1\n// module chunks = 0","/**\r\n * 矩阵和数组相关工具\r\n */\r\nconst matrixToolkit = {\r\n  makeRow(v = 0) {\r\n    const array = new Array(9);\r\n    array.fill(v);\r\n    return array;\r\n  },\r\n  \r\n  makeMatrix(v = 0) {\r\n    return Array.from({length: 9}, () => this.makeRow(v))\r\n  },\r\n  \r\n  /**\r\n   * Fisher-Yates 洗牌算法\r\n   */\r\n  shuffle (array) {\r\n    const endIndex = array.length - 2;\r\n    for(let i = 0; i < endIndex; i++){\r\n      const j = i + Math.floor(Math.random() * (array.length - i));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  },\r\n\r\n  /**\r\n   * TODO 检查指定位置可以填写数字 n\r\n   */\r\n  checkFillable(matrix, n, rowIndex, colIndex) {\r\n    const row = matrix[rowIndex];\r\n    const column = this.makeRow().map((v, i) => matrix[i][colIndex]);\r\n    const { boxIndex } = boxToolkit.converToBoxIndex(rowIndex, colIndex);\r\n    const box = boxToolkit.getBoxCells(matrix, boxIndex);\r\n    for(let i = 0;i < 9; i++){\r\n      if(row[i] === n || column[i] === n || box[i] === n)\r\n      return  false;\r\n    }\r\n    return true;\r\n  }\r\n};\r\n\r\n/**\r\n * 宫坐标系工具\r\n */\r\n\r\n const boxToolkit = {\r\n  getBoxCells(matrix, boxIndex){\r\n    const startRowIndex = Math.floor(boxIndex / 3) * 3;\r\n    const startColIndex = boxIndex % 3 * 3;\r\n    const result = [];\r\n    for(let cellIndex = 0; cellIndex < 9;cellIndex++){\r\n      const rowIndex = startRowIndex + Math.floor(cellIndex / 3);\r\n      const colIndex = startColIndex + cellIndex % 3;\r\n      result.push(matrix[rowIndex][colIndex]);\r\n    }\r\n    return result;\r\n  },\r\n   converToBoxIndex(rowIndex, colIndex){\r\n     return {\r\n       boxIndex: Math.floor(rowIndex / 3) * 3 + Math.floor(colIndex/3),\r\n       cellIndex: rowIndex % 3 * 3 + colIndex % 3\r\n     };\r\n   },\r\n\r\n   coverFromBoxIndex(boxIndex, cellIndex) {\r\n     return {\r\n       rowIndex: Math.floor(boxIndex / 3) * 3 + Math.floor(cellIndex / 3),\r\n       colIndex: boxIndex % 3 * 3 + cellIndex % 3\r\n     };\r\n   }\r\n }\r\n\r\n// 工具集\r\n\r\nmodule.exports = class Tookit {\r\n\r\n  /**\r\n   * 矩阵和数组相关的工具\r\n   */\r\n\r\n  static get matrix() {\r\n    return matrixToolkit;\r\n  }\r\n\r\n  /**\r\n   * 宫坐标系相关的工具\r\n   */\r\n\r\n  static get box() {\r\n    return boxToolit;\r\n  }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/toolkit.js\n// module id = 2\n// module chunks = 0","// 生成数独解决方案\r\nconst Toolkit = require(\"./toolkit\")\r\n\r\nmodule.exports = class Generator {\r\n  generate() {\r\n    while (!this.internalGenerate()) {\r\n      console.log(\"try again\")\r\n    }\r\n  }\r\n\r\n  internalGenerate() {\r\n    this.matrix = Toolkit.matrix.makeMatrix();\r\n    this.orders = Toolkit.matrix.makeMatrix()\r\n        .map(row => row.map((v, i) => i))\r\n        .map(row => Toolkit.matrix.shuffle(row));\r\n\r\n    // Toolkit.matrix.makeRow\r\n\r\n    for(let n = 1; n <= 9; n++){\r\n      if (!this.fillNumber(n)){\r\n        return false;\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  fillNumber(n){\r\n    return this.fillRow(n, 0);\r\n  }\r\n\r\n  fillRow(n, rowIndex) {\r\n    if (rowIndex > 8){\r\n      return true;\r\n    }\r\n\r\n    const row = this.matrix[rowIndex];\r\n    const orders = this.orders[rowIndex];\r\n    // TODO 随机选择列\r\n    for (let i = 0; i < 9; i++){\r\n      const colIndex = orders[i];\r\n\r\n      // 这个位置已经有值，跳过\r\n      if(row[colIndex]) {\r\n        continue;\r\n      }\r\n\r\n      // 检查这个位置是否可以填 n\r\n      if(!Toolkit.matrix.checkFillable(this.matrix, n, rowIndex, colIndex)) {\r\n        continue;\r\n      }\r\n\r\n      // 去下一行填写 n，如果没填进去，就继续寻找当前行下一个位置\r\n      row[colIndex] = n;\r\n      // // 当前行填写 n 成功， 递归调用 fillRow 来在下一行中填写 n\r\n      // this.fillRow(n, rowIndex + 1);\r\n      if(!this.fillRow(n, rowIndex + 1)){\r\n        row[colIndex] = 0;\r\n        continue;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n// const generator = new Generator();\r\n// generator.generate();\r\n// console.log(generator.matrix);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/generator.js\n// module id = 3\n// module chunks = 0","// 生成数独游戏\r\n\r\n// 1. 生成完成的解决方案： Generator\r\n\r\n// 2. 随机去除部分数据：按比例\r\n\r\nconst Generator = require(\"./generator\");\r\n\r\nmodule.exports = class Sudoku {\r\n  constructor(){\r\n    // 生成完成的解决方案\r\n    const generator = new Generator();\r\n    generator.generate();\r\n    this.solutionMatrix = generator.matrix;\r\n  }\r\n\r\n  make(level = 5){\r\n    // const shouldRid = Math.random() * 9 < level;\r\n    // 生成谜盘\r\n    this.puzzleMatrix = this.solutionMatrix.map(row => {\r\n      return row.map(cell => Math.random() * 9 < level ? 0  : cell);\r\n    });\r\n  }\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/sudoku.js\n// module id = 4\n// module chunks = 0","// 处理弹出的操作面板\r\n\r\nmodule.exports = class PopupNumbers {\r\n  constructor($panel) {\r\n    this._$panel = $panel.hide().removeClass(\"hidden\");\r\n    this._$panel.on(\"click\", \"span\", e => {\r\n      const $cell = this._$targetCell;\r\n      const $span = $(e.target);\r\n\r\n      if ($span.hasClass(\"mark1\")){\r\n        // mark1 回填样式\r\n        if($cell.hasClass(\"mark1\")){\r\n          $cell.removeClass(\"mark1\");\r\n        }else{\r\n          $cell.removeClass(\"mark2\")\r\n          .addClass(\"mark1\");\r\n        }\r\n      } else if ($span.hasClass(\"mark2\")){\r\n        // mark2 回填样式\r\n        if($cell.hasClass(\"mark2\")){\r\n          $cell.removeClass(\"mark2\");\r\n        }else{\r\n          $cell.removeClass(\"mark1\")\r\n          .addClass(\"mark2\");\r\n        }\r\n      }else if($span.hasClass(\"empty\")){\r\n        // empty 取消数字填写，取消mark\r\n        $cell.text(0)\r\n        .addClass(\"empty\");\r\n      } else {\r\n        // 1-9 回填数字\r\n        $cell.removeClass(\"empty\").text($span.text());\r\n      }\r\n\r\n      this.hide();\r\n      return;\r\n    })\r\n  }\r\n\r\n  popup($cell) {\r\n    this._$targetCell = $cell;\r\n    const {left, top} = $cell.position();\r\n    this._$panel\r\n    .css({\r\n      left: `${left}px`,\r\n      top: `${top}px`\r\n    })\r\n    .show();\r\n  }\r\n\r\n  hide() {\r\n    this._$panel.hide();\r\n  }\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/popupnumbers.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}